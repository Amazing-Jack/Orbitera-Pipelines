pipelines:
  - name: gradle_build
    configuration:
      environmentVariables:
        readOnly:
          Version: 1.0.$run_number
          

    steps:
      - name: gradle_bld_svc_demo
        type: GradleBuild
        configuration:
          runtime:
            type: image
            image:
             custom:
             # THe Docker image is used to support a java 8 image for the gradle build
              name: docker.bintray.io/jfrog/pipelines-u16java
              tag: "8"
          gradleCommand:        clean artifactoryPublish -b build.gradle
          sourceLocation:       tutorial/step1-create-gradle-app
          configFileLocation:   .
          configFileName:       jfrog-gradle.yml
          forceXrayScan:        false
          autoPublishBuildInfo: true
          inputResources:
            - name: orbitera_gitRepo_demo
          outputResources:
            - name: gradleBuildInfo
          integrations:
            - name: artifactory
        execution:
          onStart:
          # Used for internal environment variables for the gradle build
            
            - export artifactory_plugins_url="${int_artifactory_url}"/jcenter-gradle-remote
            - export artifactory_libs_url="${int_artifactory_url}"/team1-gradle

            
            
      - name: gradle_scan
        type: XrayScan
        configuration:
          #inherits from bash
          waitUntilFinish: true
          inputResources:
            - name: gradleBuildInfo
              trigger: true
          outputResources: 
            - name: scanned_gradleBuild_Info

            
                     
      - name: gradle_promote
        type: PromoteBuild
        configuration:
          targetRepository:      team1-gradle-staging-us 
          includeDependencies:   false   
          status:                Passed
          comment:               Artifact passed Xray Scan
          copy:                  true
          inputResources:
            - name:    scanned_gradleBuild_Info    # optional
              trigger: true       
          outputResources:
            - name: promoted_gradleBuild_Info

#------------------------------------Docker Section ------------------------------------------------

      - name: Gradle_docker_build
        type: DockerBuild
        configuration:
          dockerFileLocation: tutorial/step1-create-gradle-app
          dockerFileName: Dockerfile
          dockerImageName: ${ArtIP}/team1-docker/gradle-app       
          dockerImageTag: ${Version}
#           dockerOptions:
#             - build_args: BUILD_NUMBER=${$run_number}
          inputResources:
            - name: orbitera_gitRepo_demo
            - name: gradle_fileSpec
            - name: promoted_gradleBuild_Info
              trigger: true
          integrations:
            - name: artifactory
        execution:
          onStart: 
            - export ArtIP=$(echo ${int_artifactory_url}|awk -F '/' '{print $3}')
            - printenv
            - mkdir -p tutorial/step3-create-docker-multi-app/package


      - name: Gradle_docker_push
        type: DockerPush
        configuration:
          targetRepository:     team1-docker-dev-us
          forceXrayScan:        false
          autoPublishBuildInfo: true
          integrations:
            - name:  artifactory
          inputSteps:
            - name: Gradle_docker_build
          outputResources:
            - name: docker_gradleBuild_Info
 
#       - name: Gradle_docker_scan
#         type: XrayScan
#         configuration:
#           waitUntilFinish: true
#           inputResources:
#             - name: docker_gradleBuild_Info
#               trigger: true
#           outputResources: 
#             - name: scanned_gradle_dockerBuild_Info

      - name: gradle_docker_promote
        type: PromoteBuild
        configuration:
          targetRepository:      team1-docker-staging-us 
          includeDependencies:   false   
          status:                Passed
          comment:               Artifact passed Xray Scan
          copy:                  false
          inputResources:
            #- name:    scanned_gradle_dockerBuild_Info    # optional
            - name:     docker_gradleBuild_Info     # optional
              trigger: true       
          outputResources:
            - name: final_docker_gradleBuild_Info         

       

 
