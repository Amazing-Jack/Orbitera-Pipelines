pipelines:
  - name: npm_build
  # Global configuration section for the entire pipeline
    configuration:
      environmentVariables:
        readOnly:
          Version: 1.0.$run_number
    steps:
      - name: npm_compile
        type: NpmBuild
        configuration:
          runtime:
            type: image
            image:
              custom:
                name: docker.bintray.io/jfrog/pipelines-u18node
                tag: "10.16.3"
          npmArgs:   install
          repositoryName:   team1-npm
          sourceLocation:   tutorial/step2-create-ui-pkg
          integrations:
            - name: artifactory
          inputResources:
            - name: gitRepo_source
        execution:
          onStart:
            - pushd ${res_myGitRepoResourceName_resourcePath} # /tutorial/step2-create-ui-pkg
            - ls
            - sed -i 's/0.3.0/${Version}/g' package.json
            - popd

      - name: npm_publish
        type: NpmPublish
        configuration:
          repositoryName:       team1-npm
          autoPublishBuildInfo: true
          integrations:
            - name: artifactory
          inputSteps:
            - name: npm_compile
          outputResources:
            - name: npmBuildInfo


      - name: npm_scan
        type: XrayScan
        configuration:
          #inherits from bash
          waitUntilFinish: true
          inputResources:
            - name: npmBuildInfo        
              trigger: true
          outputResources: 
            - name: scanned_npmBuild_Info
       
         
            
                     
      - name: npm_promote
        type: PromoteBuild
        configuration:
          targetRepository:      team1-npm-staging-us 
          includeDependencies:   false   
          status:                Passed
          comment:               Artifact passed Xray Scan
          copy:                  true
          inputResources:
            - name:    scanned_npmBuild_Info    # optional
              trigger: true       
          outputResources:
            - name: promoted_npmBuild_Info

      - name: npm_docker_build
        type: DockerBuild
        configuration:
          dockerFileLocation: tutorial/step2-create-ui-pkg
          dockerFileName: Dockerfile
          dockerImageName: ${ArtIP}/team1-docker-dev-us/npm-app
          dockerImageTag: ${Version}
          inputResources: 
            - name: gitRepo_source
            - name: npm_fileSpec
            - name: promoted_npmBuild_Info
              trigger: true
          integrations:
            - name: artifactory
        execution:
          onStart:
            - export ArtIP=$(echo ${int_artifactory_url}|awk -F '/' '{print $3}')
            # Creating a Folder for the fileSpec Target
            - mkdir -p Npm_result
          onSuccess:
            - echo "Congrats The Docker image was build"

          onFailure:
            - echo "uh oh, something went wrong"
          onComplete: #always
            - echo "Cleaning up some stuff"

      - name: Npm_docker_push
        type: DockerPush
        configuration:
          targetRepository:     team1-docker-dev-us
          autoPublishBuildInfo: true
          integrations:
            - name:  artifactory
          inputSteps:
            - name: npm_docker_build
          outputResources:
            - name: docker_npmBuild_Info
            
            
      - name: npm_docker_scan
        type: XrayScan
        configuration:
          waitUntilFinish: true
          inputResources:
            - name: docker_npmBuild_Info
              trigger: true
          outputResources: 
            - name: scanned_npm_dockerBuild_Info

      - name: npm_docker_promote
        type: PromoteBuild
        configuration:
          targetRepository:      team1-docker-staging-us 
          includeDependencies:   false   
          status:                Passed
          comment:               Artifact passed Xray Scan
          copy:                  false
          inputResources:
            - name:    scanned_npm_dockerBuild_Info    # optional
              trigger: true       
          outputResources:
            - name: final_docker_npmBuild_Info         
